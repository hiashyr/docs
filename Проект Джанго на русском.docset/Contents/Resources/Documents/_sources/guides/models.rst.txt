Работа с моделями
=================

Создание моделей
----------------

Пример модели Task:

.. code-block:: python

   from django.db import models
   from django.contrib.auth import get_user_model

   User = get_user_model()

   class Task(models.Model):
       STATUS_CHOICES = [
           ('todo', 'To Do'),
           ('in_progress', 'In Progress'), 
           ('done', 'Done'),
       ]
       
       title = models.CharField(max_length=200)
       description = models.TextField(blank=True)
       status = models.CharField(
           max_length=20, 
           choices=STATUS_CHOICES, 
           default='todo'
       )
       assignee = models.ForeignKey(
           User, 
           on_delete=models.CASCADE,
           related_name='tasks'
       )
       due_date = models.DateTimeField(null=True, blank=True)
       created_at = models.DateTimeField(auto_now_add=True)
       updated_at = models.DateTimeField(auto_now=True)
       
       class Meta:
           ordering = ['-created_at']
           indexes = [
               models.Index(fields=['status', 'assignee']),
           ]
       
       def __str__(self):
           return self.title
       
       def is_overdue(self):
           if self.due_date:
               from django.utils import timezone
               return self.due_date < timezone.now()
           return False

Миграции
--------

Создание миграций:

.. code-block:: bash

   python manage.py makemigrations
   python manage.py migrate

QuerySets
---------

Примеры запросов:

.. code-block:: python

   # Все задачи пользователя
   user_tasks = Task.objects.filter(assignee=user)
   
   # Активные задачи
   active_tasks = Task.objects.exclude(status='done')
   
   # Просроченные задачи
   from django.utils import timezone
   overdue_tasks = Task.objects.filter(
       due_date__lt=timezone.now(),
       status__in=['todo', 'in_progress']
   )
   
   # Задачи с предварительной загрузкой
   tasks_with_assignee = Task.objects.select_related('assignee')